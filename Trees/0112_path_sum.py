###########################################################################
#                                                                         #
# Author: Daniel Mock                                                     #
#                                                                         #
# Purpose: To document progress in learning algorithms & data structures  #
#                                                                         #
# References: This question was generated by leetcode.com. The solution   #
# to the question was generated by Daniel Mock.                           #
#                                                                         #
###########################################################################


# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def hasPathSum(self, root: TreeNode, sum: int) -> bool:
        if root is None: return False
        val = False
        val = self.recurse(root, sum, 0, val)
        return val

    def recurse(self, root, sum, accum, val):
        accum += root.val
        if root.left is None and root.right is None:
            if sum == accum: return True
        elif root.left is not None and root.right is None:
          val = self.recurse(root.left, sum, accum, val)
        elif root.left is None and root.right is not None:
            val = self.recurse(root.right, sum, accum, val)
        else:
            val = self.recurse(root.left, sum, accum, val)
            val = self.recurse(root.right, sum, accum, val)
        return val
