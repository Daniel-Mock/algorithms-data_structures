###########################################################################
#                                                                         #
# Author: Daniel Mock                                                     #
#                                                                         #
# Purpose: To document progress in learning algorithms & data structures  #
#                                                                         #
# References: This question was generated by leetcode.com. The solution   #
# to the question was generated by Daniel Mock.                           #
#                                                                         #
###########################################################################

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def isSymmetric(self, root: TreeNode) -> bool:
        if root is None: return True
        queue = []
        queue.append(root)
        layer = []
        while len(queue) > 0:
            q_len = len(queue)
            for l in range(q_len):
                node = queue.pop(0)
                if node is None:
                    layer.append(None)
                    continue
                if node.left is not None:
                    queue.append(node.left)
                else: queue.append(None)
                if node.right is not None:
                    queue.append(node.right)
                else: queue.append(None)

                layer.append(node.val)
                num = len(layer)/2
            for index, l in enumerate(layer):
                if l != layer[len(layer)-index-1]:
                    return False
            layer = []
        return True
