###########################################################################
#                                                                         #
# Author: Daniel Mock                                                     #
#                                                                         #
# Purpose: To document progress in learning algorithms & data structures  #
#                                                                         #
# References: This question was generated by leetcode.com. The solution   #
# to the question was generated by Daniel Mock.                           #
#                                                                         #
###########################################################################

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def sumNumbers(self, root: TreeNode) -> int:
        if root is None: return 0
        if root.left is None and root.right is None: return root.val
        arr = []
        val = [0]
        return self.recurse(root, arr.copy(), val)

    def recurse(self, root, arr, val):
        if root is None: return
        arr.append(root.val)

        if root.left is None and root.right is None:
            val[0] += int(''.join(str(i) for i in arr))
            return

        self.recurse(root.left, arr.copy(), val)
        self.recurse(root.right, arr.copy(), val)
        return val[0]
