###########################################################################
#                                                                         #
# Author: Daniel Mock                                                     #
#                                                                         #
# Purpose: To document progress in learning algorithms & data structures  #
#                                                                         #
# References: This question was generated by leetcode.com. The solution   #
# to the question was generated by Daniel Mock.                           #
#                                                                         #
###########################################################################



class Solution:
    def rightSideView(self, root: TreeNode) -> List[int]:
        if root is None: return None
        lst = []
        queue = [root]

        while queue:
            q_len = len(queue)
            for i in range(len(queue)):
                node = queue.pop(0)
                if i == q_len-1:
                    lst.append(node.val)
                if node.left: queue.append(node.left)
                if node.right: queue.append(node.right)
        return lst
