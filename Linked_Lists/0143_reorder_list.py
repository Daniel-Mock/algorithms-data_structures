###########################################################################
#                                                                         #
# Author: Daniel Mock                                                     #
#                                                                         #
# Purpose: To document progress in learning algorithms & data structures  #
#                                                                         #
# References: This question was generated by leetcode.com. The solution   #
# to the question was generated by Daniel Mock.                           #
#                                                                         #
###########################################################################

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reorderList(self, head: ListNode) -> None:
        """
        Do not return anything, modify head in-place instead.
        """
        list_mem_1 = []
        head_ref = head
        if not head: return
        if head.next is None: return head
        if head.next.next is None:
            return
        while head:
            list_mem_1.append(head)
            head = head.next
        len_lst = len(list_mem_1)

        if len_lst % 2 == 0:
            mid = len_lst //2
        else:
            mid = (len_lst //2) + 1
        list_mem_2 = list_mem_1[mid:]
        list_mem_1 = list_mem_1[:mid]

        pos = 0
        for _ in range(len(list_mem_2)):
            list_mem_1.insert(pos+1, list_mem_2.pop())
            pos+=2
        for index, val in enumerate(list_mem_1[:-1]):
            val.next = list_mem_1[index+1]
        list_mem_1[-1].next = None
