###########################################################################
#                                                                         #
# Author: Daniel Mock                                                     #
#                                                                         #
# Purpose: To document progress in learning algorithms & data structures  #
#                                                                         #
# References: This question was generated by leetcode.com. The solution   #
# to the question was generated by Daniel Mock.                           #
#                                                                         #
###########################################################################

class Solution:
    def longestWord(self, words: List[str]) -> str:
        wordlist = set()
        words.sort()
        result = ''
        for word in words:
            if len(word) == 1 or word[:-1] in wordlist:
                if len(word) > len(result):
                    result = word
                wordlist.add(word)
        return result
